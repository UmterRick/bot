from database import Group, DataBase, User
from configs import PrintException, datetime
group_chat_greeting = '–ü—Ä–∏–≤—ñ—Ç,—è –±–æ—Ç —è—ñ–º–æ—è—à–∫–æ–ª–∞, –¥–æ —è–∫–æ–≥–æ —á–∞—Ç—É –≤–∏ –º–µ–Ω–µ –¥–æ–¥–∞–ª–∏?'

main_menu_text = '<b> üìú –ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é üìú </b>'
your_courses = "–í–∞—à—ñ –∫—É—Ä—Å–∏ : "
start_text = '–ü—Ä–∏–≤—ñ—Ç! üëã\n' \
             '–Ø –±–æ—Çü§ñ, —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –æ–±—Ä–∞—Ç–∏ —Å–æ–±—ñ –∫—É—Ä—Å —É –Ω–∞—à–æ–º—É –æ—Å–≤—ñ—Ç–Ω—å–æ–º—É —Ü–µ–Ω—Ç—Ä—ñ –Ø–Ü–ú–û–Ø–®–ö–û–õ–êüéì\n–û–±–µ—Ä—ñ—Ç—å —Ö—Ç–æ –≤–∏?üëáüèª'

admin_groups_start = "–í—ñ—Ç–∞—é, —è –ë–æ—Ç <i>–Ø–Ü–ú–û–Ø–®–ö–û–õ–ê</i>\n " \
                     "–í–∏ –¥–æ–¥–∞–ª–∏ –º–µ–Ω–µ –¥–æ —á–∞—Ç—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤.\n" \
                     "–¢—É—Ç –≤–∏ –∑–º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–æ–≤—ñ –∑–∞—è–≤–∫–∏ –¥–æ –≥—Ä—É–ø" \

log_chat_start = "–í—ñ—Ç–∞—é, —è –ë–æ—Ç <i>–Ø–Ü–ú–û–Ø–®–ö–û–õ–ê</i>\n " \
                     "–í–∏ –¥–æ–¥–∞–ª–∏ –º–µ–Ω–µ –¥–æ —á–∞—Ç—É –∑–≤—ñ—Ç—ñ–≤.\n" \
                     "–¢—É—Ç –≤–∏ –∑–º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —â–æ–¥–æ –º–æ—î—ó —Ä–æ–±–æ—Ç–∏ " \


password_request = '–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å :'
wrong_password = '–ü–∞—Ä–æ–ª—å –Ω–µ–≤—ñ—Ä–Ω–∏–π, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ :'

add_chat_text = '–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É, –æ–±–µ—Ä—ñ—Ç—å —á–∞—Ç —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ü—ñ–π –≥—Ä—É–ø—ñ —Ç–∞ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–µ —Ä–µ–¥–∞–≥—É—é—á–∏ —ó—ó'
#fjdkslcsmd
trainer_manual = "<b>–ü–µ—Ä–µ–¥</b> –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ:\n" \
                 "\t- <b>–î–æ–¥–∞—Ç–∏</b> –±–æ—Ç–∞ –¥–æ –≥—Ä—É–ø–∏ —è–∫ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å–Ω–∏–∫–∞\n" \
                 "\t- <b>–ó—Ä–æ–±–∏—Ç–∏</b> –π–æ–≥–æ <b>–∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b> –≥—Ä—É–ø–∏\n" \
                 "<b>–ü—ñ—Å–ª—è</b> —Ü—å–æ–≥–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É —Ç–∞ –æ–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —á–∞—Ç\n" \
                 "<b>–ù–∞–¥—ñ—à–ª—ñ—Ç—å</b> –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è <b>–Ω–µ –∑–º—ñ–Ω—é—é—á–∏</b> –π–æ–≥–æ\n"

warn_text = "<b>–¢–∞–∫–∞ –≥—Ä—É–ø–∞ –≤–∂–µ —ñ—Å–Ω—É—î</b>"


def Enroll_text(user):
    courses = DataBase.getCourses(DataBase())

    to_admin_text = f"<strong>–ü–æ–ª—É—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞</strong>\n\n–ò–º—è: <i>{user['name']}</i>;" \
                    f"\n–ù–∏–∫–Ω–µ–π–º: @{user['nickname']};\n–¢–µ–ª–µ—Ñ–æ–Ω: {user['contact']}\n\n–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã: \n"
    for group in user['groups']:
        g_info = Group.read(Group(), group)
        group_type = '–û—Ñ–ª–∞–π–Ω' if g_info[group]['offline'] == 1 else '–û–Ω–ª–∞–π–Ω'

        for key in courses:
            if key == g_info[group]['course_hash']:
                to_admin_text += f"‚úÖ –ö—É—Ä—Å : {courses[key]['name']} \n\t " \
                                 f"‚ñ∂Ô∏è –ì—Ä—É–ø–∞ üìÖ(üïí){g_info[group]['daytime']} üåê{group_type}\n"
    to_admin_text += '\n–ó–∞—è–≤–∫–∞ –ø–æ–¥–∞–Ω–∞ –Ω–∞:\n'
    enroll = user['enrolls'][-1]
    e_info = Group.read(Group(), enroll)
    group_type = '–û—Ñ–ª–∞–π–Ω' if e_info[enroll]['offline'] == 1 else '–û–Ω–ª–∞–π–Ω'

    for key in courses:
        if key == e_info[enroll]['course_hash']:
            to_admin_text += f"‚ùì –ö—É—Ä—Å : {courses[key]['name']}'; \n\t" \
                             f"‚ñ∂Ô∏è –ì—Ä—É–ø–∞ üìÖ(üïí){e_info[enroll]['daytime']} üåê{group_type}\n"
    return to_admin_text


def AnswerEnroll(user_id, enroll_id, answer, call):
    result = '–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞—è–≤–∫—É'
    answer_text = str()
    admin_answer = str()
    admin_log_text = str()
    try:
        courses = DataBase.getCourses(DataBase())
        e_info = Group.read(Group(), enroll_id)
        client = User.read(User(), user_id)
        print(client)
        for key in courses:
            if key == e_info[enroll_id]['course_hash']:
                group_type = '–û—Ñ–ª–∞–π–Ω' if e_info[enroll_id]['offline'] == 1 else '–û–Ω–ª–∞–π–Ω'
                text = f"–í–∞—à –∑–∞–ø–∏—Ç –Ω–∞ –∑–∞—á–∏—Å–ª–µ–Ω–Ω—è –¥–æ –∫—É—Ä—Å—É: \n‚ñ∂Ô∏è {courses[key]['name']}\n" \
                       f"‚ñ∂Ô∏è –ì—Ä—É–ø–∞ üìÖ(üïí){e_info[enroll_id]['daytime']} üåê{group_type}"
                if answer == 'accept':
                    answer_text = f"\n\n <b>‚úÖ–ü–†–ò–ô–ù–Ø–¢–û‚úÖ</b>"
                    admin_answer = '<b>–ü–Ü–î–¢–í–ï–†–î–ò–õ–ê</b>'
                elif answer == 'cancel':
                    answer_text = f"\n\n<b>‚ùé–í–Ü–î–•–ò–õ–ï–ù–û‚ùé</b>"
                    admin_answer = '<b>–í–Ü–î–•–ò–õ–ò–õ–ê</b>'
                admin_log_text = f" ‚úÖ\n{call.from_user.full_name} {admin_answer} –∑–∞—è–≤–∫—É –≤—ñ–¥\n" \
                                 f"üéì {client['name']} (@{client['nickname']})( {client['contact']} )\n" \
                                 f"–î–æ –≥—Ä—É–ø–∏ :\n  üìÖ(üïí){e_info[enroll_id]['daytime']} üåê{group_type}\n"\
                                 f"–£ –∫—É—Ä—Å—ñ :\nüîµ <b>{courses[key]['name']}</b>"
                result = text + answer_text
                break
    except:
        PrintException()
    print(result, '\n', admin_log_text)
    return result, admin_log_text


def NotificationText(group_id, user_id):
    now = datetime.now()
    courses = DataBase.getCourses(DataBase())
    g_info = Group.read(Group(), group_id)
    users = User.read(User())
    morning = datetime.now().replace(hour=9, minute=00)
    day = datetime.now().replace(hour=12, minute=00)
    evening = datetime.now().replace(hour=18, minute=00)
    greet = "–ü—Ä–∏–≤—ñ—Ç"
    course_name = '—É –Ω–∞—à–æ–º—É –∑–∞–∫–ª–∞–¥—ñ'
    if morning < now < day:
        greet = '–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É, '
    elif day < now < evening:
        greet = '–î–æ–±—Ä–∏–π –¥–µ–Ω—å, '
    elif evening < now:
        greet = '–î–æ–±—Ä–∏–π –≤–µ—á—ñ—Ä, '
    group_type = '–û—Ñ–ª–∞–π–Ω' if g_info[group_id]['offline'] == 1 else '–û–Ω–ª–∞–π–Ω'
    for key in courses:
        if key == g_info[group_id]['course_hash']:
            course_name = courses[key]['name']
            break

    note_text = f"{greet}{users[user_id]['name']}, –æ—Å–≤—ñ—Ç–Ω—ñ–π —Ü–µ–Ω—Ç—Ä –Ø–Ü–ú–û–Ø–®–ö–û–õ–ê, –Ω–∞–≥–∞–¥—É—î –≤–∞–º, " \
                f"—â–æ –±–ª–∏–∂—á–∏–º —á–∞–æ—Å–æ–º –º–∏ —á–µ–∫–∞—î–º–æ –≤–∞—Å –Ω–∞ –∑–∞–Ω—è—Ç—Ç—è —É –≥—Ä—É–ø—ñ \n" \
                f"–ì—Ä—É–ø–∞: \nüìÖ(üïí){g_info[group_id]['daytime']} üåê{group_type} \n" \
                f"–¥–æ –∫—É—Ä—Å—É: \n{course_name}"
    return note_text

def Registered_greeting(type_, name):
    text = f"–ü—Ä–∏–≤—ñ—Ç –º–∏ –≤–∂–µ –∑–Ω–∞–π–æ–º—ñ, –≤–∏ {type_} <i>{name}</i>" \
           f" –≤ –Ω–∞—à–æ–º—É –æ—Å–≤—ñ—Ç–Ω—å–æ–º—É —Ü–µ–Ω—Ç—Ä—ñ"
    return text

def LogText(log):
    if log['type'] == 'ERR':
            point = 'üî¥'
    elif log['type'] == 'INFO':
        point = 'üîµ'
    elif log['type'] == 'WARN':
        point = '‚ö™Ô∏è'
    else:
        point = '‚úîÔ∏è'
    text = f"{point} #{log['type']}\n" \
           f"–û—Ç : {log['user_name']} ({log['user_id']}) \n" \
           f"–í—Ä–µ–º—è : {log['time']}\n" \
           f"Log : \n" \
           f"{log['content']}"
    return text

